local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "larp.lol " .. Fluent.Version,
    SubTitle = "by 9ausn",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = false,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "" })
}

local Options = Fluent.Options

local Toggle = Tabs.Main:AddToggle("CamlockToggle", { Title = "Enable Camlock", Default = false })

local CamlockEnabled = false

Toggle:OnChanged(function()
    CamlockEnabled = Options.CamlockToggle.Value
end)

local function Camlock()
    local Players = game:GetService("Players")
    local Workspace = game:GetService("Workspace")
    local Player = Players.LocalPlayer
    local Character = Player.Character or Player.CharacterAdded:Wait()
    local Camera = Workspace.CurrentCamera
    local Humanoid = Character:WaitForChild("Humanoid")

    local function GetGoal()
        local Distance, Goal = math.huge, nil

        local function CheckHoops(container)
            if not container then return end
            for _, court in ipairs(container:GetChildren()) do
                for _, Obj in ipairs(court:GetDescendants()) do
                    if Obj.Name == "Swish" and Obj.Parent:FindFirstChildOfClass("TouchTransmitter") then
                        local Magnitude = (Character.PrimaryPart.Position - Obj.Parent.Position).Magnitude
                        if Magnitude < Distance then
                            Distance = Magnitude
                            Goal = Obj.Parent
                        end
                    end
                end
            end
        end

        CheckHoops(Workspace:FindFirstChild("Courts"))
        CheckHoops(Workspace:FindFirstChild("PracticeArea"))

        return Goal, Distance
    end

    local function LowArc(dist)
        if dist == 59 or dist == 60 or dist == 61 then
            return -17
        elseif dist == 62 or dist == 63 then
            return -16
        elseif dist == 64 or dist == 65 then
            return -13
        elseif dist == 66 or dist == 67 then
            return -11
        elseif dist == 68 or dist == 69 then
            return -8
        elseif dist == 70 or dist == 71 then
            return -5
        elseif dist == 72 then
            return -2
        else
            return 0
        end
    end

    local function HighArc(dist)
        if dist == 59 or dist == 60 or dist == 61 or dist == 62 then
            return 30
        elseif dist == 63 or dist == 64 or dist == 65 then
            return 28
        elseif dist == 66 or dist == 67 then
            return 25
        elseif dist == 68 or dist == 69 then
            return 22
        elseif dist == 70 or dist == 71 then
            return 20
        else
            return 15
        end
    end

    local function CameraAndArcCalculate()
        if not CamlockEnabled then return end
        local Goal, Distance = GetGoal()

        if Goal then
            local HoopPosition = Goal.Position
            local ArcAdjustment = HighArc(math.floor(Distance))  
            if ArcAdjustment == 0 then
                ArcAdjustment = LowArc(math.floor(Distance))  
            end
            
            local NewCameraPosition = HoopPosition + Vector3.new(0, ArcAdjustment, 0)
            
            Camera.CameraType = Enum.CameraType.Attach
            Camera.CFrame = CFrame.new(Camera.CFrame.Position, NewCameraPosition)
        end
    end

    local function ResetCamera()
        Camera.CameraType = Enum.CameraType.Custom
    end

    Humanoid.StateChanged:Connect(function(_, NewState)
        if CamlockEnabled and NewState == Enum.HumanoidStateType.Jumping then
            CameraAndArcCalculate()
        elseif NewState == Enum.HumanoidStateType.Landed then
            ResetCamera()
        end
    end)
end

Camlock()

local RangeToggle = Tabs.Misc:AddToggle("RangeIndicatorToggle", { Title = "Enable Range Indicator", Default = false })
local RangeIndicatorEnabled = false
RangeToggle:OnChanged(function()
    RangeIndicatorEnabled = Options.RangeIndicatorToggle.Value
end)

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local TextLabel = Instance.new("TextLabel")
TextLabel.Parent = ScreenGui
TextLabel.Size = UDim2.new(0.3, 0, 0.05, 0) 
TextLabel.Position = UDim2.new(0.35, 0, 0, 10) 
TextLabel.BackgroundTransparency = 1 
TextLabel.TextScaled = true
TextLabel.TextColor3 = Color3.new(1, 1, 1)
TextLabel.Font = Enum.Font.SourceSansBold
TextLabel.Text = ""

local function RangeIndicator()
    local Players = game:GetService("Players")
    local Workspace = game:GetService("Workspace")
    local Player = Players.LocalPlayer
    local Character = Player.Character or Player.CharacterAdded:Wait()
    local Torso = Character:FindFirstChild("Torso") or Character:FindFirstChild("UpperTorso")

    if not Torso then return end  

    local OriginalTorsoColor = Torso.Color 

    local function GetGoal()
        local Distance, Goal = math.huge, nil

        local function CheckHoops(container)
            if not container then return end
            for _, court in ipairs(container:GetChildren()) do
                for _, Obj in ipairs(court:GetDescendants()) do
                    if Obj.Name == "Swish" and Obj.Parent:FindFirstChildOfClass("TouchTransmitter") then
                        local Magnitude = (Character.PrimaryPart.Position - Obj.Parent.Position).Magnitude
                        if Magnitude < Distance then
                            Distance = Magnitude
                            Goal = Obj.Parent
                        end
                    end
                end
            end
        end

        CheckHoops(Workspace:FindFirstChild("Courts"))
        CheckHoops(Workspace:FindFirstChild("PracticeArea"))

        return Goal, Distance
    end

    local function IsInRange(dist)
        return dist >= 59 and dist <= 72  
    end

    local function UpdateRangeStatus()
        if not RangeIndicatorEnabled then
            TextLabel.Text = ""
            Torso.Color = OriginalTorsoColor
            return
        end

        local Goal, Distance = GetGoal()
        if Goal then
            if IsInRange(math.floor(Distance)) then
                TextLabel.Text = "Perfect Shot Range!"
                TextLabel.TextColor3 = Color3.new(0, 1, 0)
                Torso.Color = Color3.new(0, 1, 0)
            else
                TextLabel.Text = "Out of Range"
                TextLabel.TextColor3 = Color3.new(1, 0, 0)
                Torso.Color = OriginalTorsoColor
            end
        else
            TextLabel.Text = "No Hoop Detected"
            TextLabel.TextColor3 = Color3.new(1, 1, 1)
            Torso.Color = OriginalTorsoColor
        end
    end

    game:GetService("RunService").RenderStepped:Connect(function()
        UpdateRangeStatus()
    end)
end

RangeIndicator()
